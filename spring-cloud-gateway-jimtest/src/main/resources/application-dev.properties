spring.cloud.gateway.routes[0].id=abc
spring.cloud.gateway.routes[0].uri=http://127.0.0.1:39999
spring.cloud.gateway.routes[0].order=1

spring.cloud.gateway.routes[0].predicates[0]=Path=/sample/{segment},/hello/{segment}
spring.cloud.gateway.routes[0].predicates[1]=Query=baz
spring.cloud.gateway.routes[0].predicates[2]=Method=GET
spring.cloud.gateway.routes[0].predicates[3]=Query=foo, ba.
spring.cloud.gateway.routes[0].predicates[4]=Host=**.paddleapi.com,**.anotherhost.org
spring.cloud.gateway.routes[0].predicates[5]=Header=X-Request-Id, \\d+
spring.cloud.gateway.routes[0].predicates[6]=Header=X-Forwarded-For, 0.0.0.1

# request
spring.cloud.gateway.routes[0].filters[0]=SetRequestHeader=X-Request-Foo, Bar-header-0
spring.cloud.gateway.routes[0].filters[1]=AddRequestParameter=addedFoo, bar
# response
spring.cloud.gateway.routes[0].filters[2]=AddResponseHeader=x-response, bar-response-0
#全局异常熔断处理，必须为Hystrix，会自动匹配HystrixGatewayFilterFactory
#必须为fallbackcmd，用于HystrixGatewayFilterFactory中bean的声明
spring.cloud.gateway.routes[0].filters[3].name=Hystrix
spring.cloud.gateway.routes[0].filters[3].args[name]=fallbackcmd
spring.cloud.gateway.routes[0].filters[3].args[fallbackUri]=forward:/hystrix/fallback

#spring.cloud.gateway.routes[0].filters[4]=Retry=5
#spring.cloud.gateway.routes[0].filters[3]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

spring.cloud.gateway.routes[1].id=weight_high
spring.cloud.gateway.routes[1].uri=http://10.1.124.25:8900
spring.cloud.gateway.routes[1].predicates[1]=Path=/weight/{segment}
spring.cloud.gateway.routes[1].predicates[0]=Weight=group1,6

spring.cloud.gateway.routes[2].id=weight_low
spring.cloud.gateway.routes[2].uri=http://10.1.124.25:8901
spring.cloud.gateway.routes[2].predicates[1]=Path=/weight/{segment}
spring.cloud.gateway.routes[2].predicates[0]=Weight=group1,4

spring.cloud.gateway.routes[3].id=reqrespmodifyhello
spring.cloud.gateway.routes[3].uri=http://127.0.0.1:39999
spring.cloud.gateway.routes[3].predicates[0]=Host=unused.anotherhost.org
spring.cloud.gateway.routes[3].filters[0]=AddRequestParameter=a,b
spring.cloud.gateway.routes[3].filters[1]=AddResponseHeader=x-response-Foo, bar-response-3

### ribbon.org
### 所有请求都要走的
spring.cloud.gateway.routes[4].id=commonPre
spring.cloud.gateway.routes[4].uri=lb://hservice
spring.cloud.gateway.routes[4].predicates[0]=Host=ribbon.org
#spring.cloud.gateway.routes[4].predicates[1]=Path=/**
spring.cloud.gateway.routes[4].filters[0]=AddRequestParameter=gateway-author, spring-cloud
spring.cloud.gateway.routes[4].filters[1]=AddResponseHeader=response-author, spring-boot

spring.cloud.gateway.routes[5].id=ribbontest
spring.cloud.gateway.routes[5].uri=lb://hservice
spring.cloud.gateway.routes[5].predicates[0]=Host=ribbon.org
spring.cloud.gateway.routes[5].predicates[1]=Path=/**
spring.cloud.gateway.routes[5].filters[0]=AddRequestParameter=a5,b5
spring.cloud.gateway.routes[5].filters[1]=AddResponseHeader=x-response-Foo, bar-response-5

### 放在后面的不起作用了.
spring.cloud.gateway.routes[6].id=commonNotWorked
spring.cloud.gateway.routes[6].uri=lb://hservice
spring.cloud.gateway.routes[6].predicates[0]=Host=ribbon.org
spring.cloud.gateway.routes[6].predicates[1]=Path=/**
spring.cloud.gateway.routes[6].filters[0]=AddRequestParameter=not-working, yes
spring.cloud.gateway.routes[6].filters[1]=AddResponseHeader=can-not-see-me, yes

### 原生的限流
#spring.cloud.gateway.filter.request-rate-limiter=true

spring.redis.host=10.100.51.48
spring.redis.port=6379
spring.redis.password=b17a5972F9044ab9
spring.redis.database=0

spring.cloud.gateway.routes[7].id=origin_flow_limit
spring.cloud.gateway.routes[7].uri=lb://hservice
spring.cloud.gateway.routes[7].predicates[0]=Host=flowlimit.org
spring.cloud.gateway.routes[7].predicates[1]=Path=/**
spring.cloud.gateway.routes[7].filters[0]=AddResponseHeader=can-see-me, yes
spring.cloud.gateway.routes[7].filters[1].name=RequestRateLimiter
spring.cloud.gateway.routes[7].filters[1].args[redis-rate-limiter.replenishRate]=2
spring.cloud.gateway.routes[7].filters[1].args[redis-rate-limiter.burstCapacity]=20
spring.cloud.gateway.routes[7].filters[2]=CustomRateLimit=system.cpu.usage, 0.1
